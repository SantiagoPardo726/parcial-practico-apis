{
	"info": {
		"_postman_id": "ae227275-6c0b-4d69-b75b-736c3aae9195",
		"name": "Supermarkets",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29622404"
	},
	"item": [
		{
			"name": "Get All Supermarkets",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Number of supermarkets > ' + 0, function () {\r",
							"   var data = pm.response.json()\r",
							"   pm.expect(data.length).to.greaterThan(0)\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{apiurl}}/supermarkets",
					"host": [
						"{{apiurl}}"
					],
					"path": [
						"supermarkets"
					]
				}
			},
			"response": [
				{
					"name": "Get All Supermarkets",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiurl}}/supermarkets",
							"host": [
								"{{apiurl}}"
							],
							"path": [
								"supermarkets"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"id\": \"1f30ad80-fb35-4797-a267-edf3efed1725\",\n        \"name\": \"Carulla\",\n        \"longitude\": 7,\n        \"latitude\": 1,\n        \"website\": \"https://www.youtube.com/\",\n        \"cities\": []\n    }\n]"
				}
			]
		},
		{
			"name": "Get Supermarket by Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{apiurl}}/supermarkets/{{supermarket_id_1}}",
					"host": [
						"{{apiurl}}"
					],
					"path": [
						"supermarkets",
						"{{supermarket_id_1}}"
					]
				}
			},
			"response": [
				{
					"name": "Get Supermarket by Id",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiurl}}/supermarkets/{{supermarket_id_1}}",
							"host": [
								"{{apiurl}}"
							],
							"path": [
								"supermarkets",
								"{{supermarket_id_1}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": \"1f30ad80-fb35-4797-a267-edf3efed1725\",\n    \"name\": \"Carulla\",\n    \"longitude\": 7,\n    \"latitude\": 1,\n    \"website\": \"https://www.youtube.com/\",\n    \"cities\": []\n}"
				}
			]
		},
		{
			"name": "Get nonexistent Supermarket",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The supermarket with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{apiurl}}/supermarkets/{{supermarket_id_2}}",
					"host": [
						"{{apiurl}}"
					],
					"path": [
						"supermarkets",
						"{{supermarket_id_2}}"
					]
				}
			},
			"response": [
				{
					"name": "Get nonexistent Supermarket",
					"originalRequest": {
						"method": "GET",
						"header": []
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\r\n    \"statusCode\": 404,\r\n    \"message\": \"The supermarket with the given id was not found\"\r\n}"
				}
			]
		},
		{
			"name": "Create new Supermarket",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"supermarket_id_1\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Carullas\",\r\n    \"longitude\": 8,\r\n    \"latitude\": 1,\r\n    \"website\": \"https://www.youtube.com/\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{apiurl}}/supermarkets",
					"host": [
						"{{apiurl}}"
					],
					"path": [
						"supermarkets"
					]
				}
			},
			"response": [
				{
					"name": "Create new Supermarket",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Carulla\",\r\n    \"longitude\": 7,\r\n    \"latitude\": 1,\r\n    \"website\": \"https://www.youtube.com/\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiurl}}/supermarkets",
							"host": [
								"{{apiurl}}"
							],
							"path": [
								"supermarkets"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"name\": \"Carulla\",\n    \"longitude\": 7,\n    \"latitude\": 1,\n    \"website\": \"https://www.youtube.com/\",\n    \"id\": \"1f30ad80-fb35-4797-a267-edf3efed1725\"\n}"
				}
			]
		},
		{
			"name": "Update a Supermarket by Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Carulla Caro\",\r\n    \"longitude\": 20,\r\n    \"latitude\": 1,\r\n    \"website\": \"https://www.youtube.com/\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{apiurl}}/supermarkets/{{supermarket_id_1}}",
					"host": [
						"{{apiurl}}"
					],
					"path": [
						"supermarkets",
						"{{supermarket_id_1}}"
					]
				}
			},
			"response": [
				{
					"name": "Update a Supermarket by Id",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Carulla Caro\",\r\n    \"longitude\": 20,\r\n    \"latitude\": 1,\r\n    \"website\": \"https://www.youtube.com/\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiurl}}/supermarkets/{{supermarket_id_1}}",
							"host": [
								"{{apiurl}}"
							],
							"path": [
								"supermarkets",
								"{{supermarket_id_1}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": \"1e37dee5-d06e-484f-b8e1-bb7c5baf54d4\",\n    \"name\": \"Carulla Caro\",\n    \"longitude\": 20,\n    \"latitude\": 1,\n    \"website\": \"https://www.youtube.com/\"\n}"
				}
			]
		},
		{
			"name": "Edit nonexistent Supermarket",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The supermarket with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Carulla Caro\",\r\n    \"longitude\": 20,\r\n    \"latitude\": 1,\r\n    \"website\": \"https://www.youtube.com/\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{apiurl}}/supermarkets/{{supermarket_id_2}}",
					"host": [
						"{{apiurl}}"
					],
					"path": [
						"supermarkets",
						"{{supermarket_id_2}}"
					]
				}
			},
			"response": [
				{
					"name": "Edit nonexistent Supermarket",
					"originalRequest": {
						"method": "PUT",
						"header": []
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The supermarket with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Delete a Supermarket by Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"   pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{apiurl}}/supermarkets/{{supermarket_id_1}}",
					"host": [
						"{{apiurl}}"
					],
					"path": [
						"supermarkets",
						"{{supermarket_id_1}}"
					]
				}
			},
			"response": [
				{
					"name": "Delete a Supermarket by Id",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{apiurl}}/supermarkets/{{supermarket_id_3}}",
							"host": [
								"{{apiurl}}"
							],
							"path": [
								"supermarkets",
								"{{supermarket_id_3}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Delete nonexistent Supermarket",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The supermarket with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{apiurl}}/supermarkets/{{supermarket_id_2}}",
					"host": [
						"{{apiurl}}"
					],
					"path": [
						"supermarkets",
						"{{supermarket_id_2}}"
					]
				}
			},
			"response": [
				{
					"name": "Delete nonexistent Supermarket",
					"originalRequest": {
						"method": "GET",
						"header": []
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The supermarket with the given id was not found\"\n}"
				}
			]
		}
	]
}